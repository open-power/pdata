<attributes>
    <enumerationType>
        <description>Enum for FUSED_CORE_OPTION</description>
        <enumerator>
            <name>USING_DEFAULT_CORES</name>
            <value>0</value>
        </enumerator>
        <enumerator>
            <name>USING_NORMAL_CORES</name>
            <value>1</value>
        </enumerator>
        <enumerator>
            <name>USING_FUSED_CORES</name>
            <value>2</value>
        </enumerator>
        <id>FUSED_CORE_OPTION</id>
    </enumerationType>

    <attribute>
        <description>
            If not loading PHYP or OPAL, then use this to
            decide whether to use FUSED cores or NOT.
        </description>
        <id>FUSED_CORE_OPTION</id>
        <persistency>volatile-zeroed</persistency>
        <readable></readable>
        <simpleType>
            <enumeration>
                <id>FUSED_CORE_OPTION</id>
            </enumeration>
            <uint8_t></uint8_t>
        </simpleType>
        <writeable></writeable>
    </attribute>

    <attribute>
        <id>DISABLE_SECURITY</id>
        <description>This attribute indicates the security status . Based on this
            HWSV will update the BOOT_FLAGS attribute to disable the security. HWSV
            will detect the IPL type and set the required bits in the BOOT_FLAGS
        </description>
        <simpleType>
            <uint8_t>
                <default>1</default>
            </uint8_t>
        </simpleType>
        <persistency>semi-non-volatile</persistency>
        <readable/>
        <writeable/>
        <bmcOnly/>
    </attribute>

    <attribute>
        <complexType>
            <description>
                Structure consisting of an EID (or reason), 5 booleans, and 3 reserved
                bits
            </description>
            <field>
                <default>0</default>
                <description>if this target was deconfigured,
                    this will be a special DECONFIGURED_BY_ enum,
                    OR it will be the errlog EID that caused it,
                    either directly or by association,
                </description>
                <name>deconfiguredByEid</name>
                <type>uint32_t</type>
            </field>
            <field>
                <bits>1</bits>
                <default>0</default>
                <description>
                    0b0: Target is not powered on (is off);
                    0b1: Target is powered on;
                </description>
                <name>poweredOn</name>
                <type>uint8_t</type>
            </field>
            <field>
                <bits>1</bits>
                <default>0</default>
                <description>
                    0b0: Target is not present in the system;
                    0b1: Target is present in the system
                </description>
                <name>present</name>
                <type>uint8_t</type>
            </field>
            <field>
                <bits>1</bits>
                <default>0</default>
                <description>
                    0b0: Target is not functional;
                    0b1: Target is functional
                </description>
                <name>functional</name>
                <type>uint8_t</type>
            </field>
            <field>
                <bits>1</bits>
                <default>0</default>
                <description>FSP Only, used by DUMP applet;
                    0b0: target is dump capabile;
                    0b1: target is not dump capabile;
                </description>
                <name>dumpfunctional</name>
                <type>uint8_t</type>
            </field>
            <field>
                <bits>1</bits>
                <default>0</default>
                <description>Set for speculative deconfig;
                    0b0: target not speculative deconfig;
                    0b1: target is speculatively deconfigured;
                </description>
                <name>specdeconfig</name>
                <type>uint8_t</type>
            </field>
            <field>
                <bits>3</bits>
                <default>0</default>
                <description>Reserved for future use</description>
                <name>reserved</name>
                <type>uint8_t</type>
            </field>
        </complexType>
        <description>
            HardWare Availability Service state attribute which keeps track whether
            a given target is powered on (or not), present (or not), functional (or
            not), functional in terms of dump (or not), speculatively deconfigured (or
            not), and if deconfigured, the reason or EID associated with the
            deconfiguration.
        </description>
        <id>HWAS_STATE</id>
        <persistency>volatile</persistency>
        <readable></readable>
        <writeable></writeable>
    </attribute>

    <attribute>
        <description>attribute indicating the chip's ID</description>
        <id>CHIP_ID</id>
        <persistency>volatile-zeroed</persistency>
        <readable></readable>
        <simpleType>
            <uint32_t></uint32_t>
        </simpleType>
        <writeable></writeable>
    </attribute>

    <attribute>
        <description>MRU ID attribute for chip/unit class</description>
        <id>MRU_ID</id>
        <no_export></no_export>
        <persistency>non-volatile</persistency>
        <readable></readable>
        <simpleType>
            <uint32_t>
                <default>0x00</default>
            </uint32_t>
        </simpleType>
    </attribute>

    <attribute>
        <description>Capturing EQ Gard value</description>
        <id>EQ_GARD</id>
        <no_export></no_export>
        <persistency>non-volatile</persistency>
        <readable></readable>
        <simpleType>
            <uint8_t></uint8_t>
        </simpleType>
        <writeable></writeable>
    </attribute>

    <enumerationType>
        <default>NOT_MASTER</default>
        <description>
            Enumeration indicating the role of proc as master/alt_master/not_master
        </description>
        <enumerator>
            <name>ACTING_MASTER</name>
            <value>0</value>
        </enumerator>
        <enumerator>
            <name>MASTER_CANDIDATE</name>
            <value>1</value>
        </enumerator>
        <enumerator>
            <name>NOT_MASTER</name>
            <value>2</value>
        </enumerator>
        <id>PROC_MASTER_TYPE</id>
    </enumerationType>

    <attribute>
        <description>Type of Master, ACTING_MASTER or MASTER_CANDIDATE or
            NOT_MASTER</description>
        <hasStringConversion></hasStringConversion>
        <id>PROC_MASTER_TYPE</id>
        <no_export></no_export>
        <persistency>non-volatile</persistency>
        <readable></readable>
        <simpleType>
            <enumeration>
                <default>NOT_MASTER</default>
                <id>PROC_MASTER_TYPE</id>
            </enumeration>
            <uint8_t></uint8_t>
        </simpleType>
        <writeable></writeable>
    </attribute>

    <enumerationType>
        <description>Indicates whether IPL should be done by stepping through the isteps (true)
            or continuously executing all steps end-to-end (false).</description>
        <enumerator>
            <name>FALSE</name>
            <value>0x0</value>
        </enumerator>
        <enumerator>
            <name>TRUE</name>
            <value>0x1</value>
        </enumerator>
        <id>ISTEP_MODE</id>
    </enumerationType>

    <attribute>
        <description>
            Indicates whether IPL should be done by stepping through the isteps (true)
            or continuously executing all steps end-to-end (false).
        </description>
        <id>ISTEP_MODE</id>
        <no_export></no_export>
        <persistency>non-volatile</persistency>
        <readable></readable>
        <simpleType>
            <enumeration></enumeration>
            <uint8_t></uint8_t>
        </simpleType>
        <writeable></writeable>
    </attribute>
    <attribute>
        <description>The address offset which each Chiplet types pervasive address space used to represent the a chiplet. 0x00 to 0x0F =&gt; For P9 all non-core and non-cache chiplets 0x10 to 0x1F =&gt; All Cache Chiplets 0x20 to 0x37 =&gt; All Core Chiplets 0x38 to 0x3F =&gt; Multicast Operation</description>
        <id>CHIPLET_ID</id>
        <persistency>non-volatile</persistency>
        <readable />
        <simpleType>
            <uint8_t>
                <default>0xFF</default>
            </uint8_t>
        </simpleType>
    </attribute>
    <enumerationType>
        <default>NA</default>
        <description>Enumeration indicating the target's type</description>
        <enumerator>
            <name>NA</name>
            <value>0</value>
        </enumerator>
        <enumerator>
            <name>SYS</name>
            <value>1</value>
        </enumerator>
        <enumerator>
            <name>NODE</name>
            <value>2</value>
        </enumerator>
        <enumerator>
            <name>DIMM</name>
            <value>3</value>
        </enumerator>
        <enumerator>
            <name>MEMBUF</name>
            <value>4</value>
        </enumerator>
        <enumerator>
            <name>PROC</name>
            <value>5</value>
        </enumerator>
        <enumerator>
            <name>EX</name>
            <value>6</value>
        </enumerator>
        <enumerator>
            <name>CORE</name>
            <value>7</value>
        </enumerator>
        <enumerator>
            <name>L2</name>
            <value>8</value>
        </enumerator>
        <enumerator>
            <name>L3</name>
            <value>9</value>
        </enumerator>
        <enumerator>
            <name>L4</name>
            <value>10</value>
        </enumerator>
        <enumerator>
            <name>MCS</name>
            <value>11</value>
        </enumerator>
        <enumerator>
            <name>MBA</name>
            <value>13</value>
        </enumerator>
        <enumerator>
            <name>XBUS</name>
            <value>14</value>
        </enumerator>
        <enumerator>
            <name>ABUS</name>
            <value>15</value>
        </enumerator>
        <enumerator>
            <name>PCI</name>
            <value>16</value>
        </enumerator>
        <enumerator>
            <name>DPSS</name>
            <value>17</value>
        </enumerator>
        <enumerator>
            <name>APSS</name>
            <value>18</value>
        </enumerator>
        <enumerator>
            <name>OCC</name>
            <value>19</value>
        </enumerator>
        <enumerator>
            <name>PSI</name>
            <value>20</value>
        </enumerator>
        <enumerator>
            <name>FSP</name>
            <value>21</value>
        </enumerator>
        <enumerator>
            <name>PNOR</name>
            <value>22</value>
        </enumerator>
        <enumerator>
            <name>OSC</name>
            <value>23</value>
        </enumerator>
        <enumerator>
            <name>TODCLK</name>
            <value>24</value>
        </enumerator>
        <enumerator>
            <name>CONTROL_NODE</name>
            <value>25</value>
        </enumerator>
        <enumerator>
            <name>OSCREFCLK</name>
            <value>26</value>
        </enumerator>
        <enumerator>
            <name>OSCPCICLK</name>
            <value>27</value>
        </enumerator>
        <enumerator>
            <name>REFCLKENDPT</name>
            <value>28</value>
        </enumerator>
        <enumerator>
            <name>PCICLKENDPT</name>
            <value>29</value>
        </enumerator>
        <enumerator>
            <name>NX</name>
            <value>30</value>
        </enumerator>
        <enumerator>
            <name>PORE</name>
            <value>31</value>
        </enumerator>
        <enumerator>
            <name>PCIESWITCH</name>
            <value>32</value>
        </enumerator>
        <enumerator>
            <name>CAPP</name>
            <value>33</value>
        </enumerator>
        <enumerator>
            <name>FSI</name>
            <value>34</value>
        </enumerator>
        <enumerator>
            <name>EQ</name>
            <value>35</value>
        </enumerator>
        <enumerator>
            <name>MCA</name>
            <value>36</value>
        </enumerator>
        <enumerator>
            <name>MCBIST</name>
            <value>37</value>
        </enumerator>
        <enumerator>
            <name>MI</name>
            <value>38</value>
        </enumerator>
        <enumerator>
            <name>DMI</name>
            <value>39</value>
        </enumerator>
        <enumerator>
            <name>OBUS</name>
            <value>40</value>
        </enumerator>
        <enumerator>
            <name>SBE</name>
            <value>42</value>
        </enumerator>
        <enumerator>
            <name>PPE</name>
            <value>43</value>
        </enumerator>
        <enumerator>
            <name>PERV</name>
            <value>44</value>
        </enumerator>
        <enumerator>
            <name>PEC</name>
            <value>45</value>
        </enumerator>
        <enumerator>
            <name>PHB</name>
            <value>46</value>
        </enumerator>
        <enumerator>
            <name>SYSREFCLKENDPT</name>
            <value>47</value>
        </enumerator>
        <enumerator>
            <name>MFREFCLKENDPT</name>
            <value>48</value>
        </enumerator>
        <enumerator>
            <name>TPM</name>
            <value>49</value>
        </enumerator>
        <enumerator>
            <name>SP</name>
            <value>50</value>
        </enumerator>
        <enumerator>
            <name>UART</name>
            <value>51</value>
        </enumerator>
        <enumerator>
            <name>PS</name>
            <value>52</value>
        </enumerator>
        <enumerator>
            <name>FAN</name>
            <value>53</value>
        </enumerator>
        <enumerator>
            <name>VRM</name>
            <value>54</value>
        </enumerator>
        <enumerator>
            <name>USB</name>
            <value>55</value>
        </enumerator>
        <enumerator>
            <name>ETH</name>
            <value>56</value>
        </enumerator>
        <enumerator>
            <name>PANEL</name>
            <value>57</value>
        </enumerator>
        <enumerator>
            <name>BMC</name>
            <value>58</value>
        </enumerator>
        <enumerator>
            <name>FLASH</name>
            <value>59</value>
        </enumerator>
        <enumerator>
            <name>SEEPROM</name>
            <value>60</value>
        </enumerator>
        <enumerator>
            <name>TMP</name>
            <value>61</value>
        </enumerator>
        <enumerator>
            <name>GPIO_EXPANDER</name>
            <value>62</value>
        </enumerator>
        <enumerator>
            <name>POWER_SEQUENCER</name>
            <value>63</value>
        </enumerator>
        <enumerator>
            <name>RTC</name>
            <value>64</value>
        </enumerator>
        <enumerator>
            <name>FANCTLR</name>
            <value>65</value>
        </enumerator>
        <enumerator>
            <name>OBUS_BRICK</name>
            <value>66</value>
        </enumerator>
        <enumerator>
            <name>NPU</name>
            <value>67</value>
        </enumerator>
        <enumerator>
            <name>MC</name>
            <value>68</value>
        </enumerator>
        <enumerator>
            <name>TEST_FAIL</name>
            <value>69</value>
        </enumerator>
        <enumerator>
            <name>MFREFCLK</name>
            <value>70</value>
        </enumerator>
        <enumerator>
            <name>SMPGROUP</name>
            <value>71</value>
        </enumerator>
        <enumerator>
            <name>OMI</name>
            <value>72</value>
        </enumerator>
        <enumerator>
            <name>MCC</name>
            <value>73</value>
        </enumerator>
        <enumerator>
            <name>OMIC</name>
            <value>74</value>
        </enumerator>
        <enumerator>
            <name>OCMB_CHIP</name>
            <value>75</value>
        </enumerator>
        <enumerator>
            <name>MEM_PORT</name>
            <value>76</value>
        </enumerator>
        <enumerator>
            <name>I2C_MUX</name>
            <value>77</value>
        </enumerator>
        <enumerator>
            <name>PMIC</name>
            <value>78</value>
        </enumerator>
        <enumerator>
            <name>NMMU</name>
            <value>79</value>
        </enumerator>
        <enumerator>
            <name>PAU</name>
            <value>80</value>
        </enumerator>
        <enumerator>
            <name>IOHS</name>
            <value>81</value>
        </enumerator>
        <enumerator>
            <name>PAUC</name>
            <value>82</value>
        </enumerator>
        <enumerator>
            <name>FC</name>
            <value>83</value>
        </enumerator>
        <enumerator>
            <name>LPCREFCLKENDPT</name>
            <value>84</value>
        </enumerator>
        <enumerator>
            <name>LAST_IN_RANGE</name>
            <value>85</value>
        </enumerator>
        <id>TYPE</id>
    </enumerationType>
    <attribute>
        <description>Attribute indicating the target's type</description>
        <hasStringConversion />
        <id>TYPE</id>
        <persistency>non-volatile</persistency>
        <readable/>
        <simpleType>
            <enumeration></enumeration>
            <uint8_t></uint8_t>
        </simpleType>
    </attribute>

    <attribute>
        <description>Physical hierarchical path to the target. Used for device tree purpose, due to existing PHYS_PATH attribute type is in EntityPath(class) which is not supported by device tree.</description>
        <id>PHYS_DEV_PATH</id>
        <simpleType>
            <string>
                <sizeInclNull>64</sizeInclNull>
            </string>
        </simpleType>
        <persistency>non-volatile</persistency>
        <readable/>
    </attribute>

    <attribute>
        <description>This attribute is used to maintain physical hierarchical path value into binary format. The path value maintained in 21 byte array. First byte is contained path type (first 4 bits) and size of path elements (second 4 bits). The remaining 20 bytes are pair (target type and instance id) of path elements (max path element in path is 10) i.e first field in pair is used to maintain target type enum value and second field in pair is used to maintain the target instance id.
            E.g.: physical:sys-0/node-0/proc-1
            binary format: 0x23 0x01 0x00 0x02 0x00 0x05 0x01
            0x23 => 0010 0011
                    0010 - if path is physical then path type is 2 if logical then 1 so, 2.
                    0011 - size of path elements so, based on example size is 3.
        </description>
        <simpleType>
            <array>21</array>
            <uint8_t></uint8_t>
        </simpleType>
        <id>PHYS_BIN_PATH</id>
        <persistency>non-volatile</persistency>
        <readable></readable>
    </attribute>

    <attribute>
        <description>Common name across FAPI environments
            chip target -&gt; pu:k0:n0:s0:p00
            DIMM target -&gt; dimm:k0:n0:s0:p00
            chip unit target -&gt; pu.core:k0:n0:s0:p00:c0
            cage/system target -&gt; k0

            (chip type).(unit type):k(cage,always zero for us):n(node/drawer)
            :s(slot,always zero for us):p(chip position):c(core/unit position)
            pu  = generic processor
        </description>
        <id>FAPI_NAME</id>
        <persistency>non-volatile</persistency>
        <readable/>
        <simpleType>
            <string>
                <default>unknown</default>
                <sizeInclNull>64</sizeInclNull>
            </string>
        </simpleType>
    </attribute>

    <attribute>
        <description>Location code of the Fru target</description>
        <id>LOCATION_CODE</id>
        <persistency>non-volatile</persistency>
        <readable />
        <simpleType>
            <string>
                <sizeInclNull>64</sizeInclNull>
            </string>
        </simpleType>
    </attribute>

    <attribute>
        <description>Allow attribute overrides in secure mode. A value of 1
           allows attribure overrde in secure mode. No-op on production-keyed
           systems (attr override is always disabled).
        </description>
        <id>ALLOW_ATTR_OVERRIDES</id>
        <persistency>non-volatile</persistency>
        <readable></readable>
        <simpleType>
            <uint8_t>
                <default>0</default>
            </uint8_t>
        </simpleType>
    </attribute>

    <attribute>                                                                 
        <description>Disable XSCOM read/write enforcement in secure mode.
           A value of 1 disables XSCOM security enforcement. No-op on
           production-keyed systems (XSCOM enforcement is always enabled).
        </description>
        <id>NO_XSCOM_ENFORCEMENT</id>
        <persistency>non-volatile</persistency>
        <readable></readable>
        <simpleType>
            <uint8_t>
                <default>0</default>
            </uint8_t>
        </simpleType>
    </attribute>

    <attribute>
        <description>The number of secure version currently installed on the system.
                     Hostboot passes this number to the BMC
        </description>
        <id>SECURE_VERSION_NUM</id>
        <persistency>non-volatile</persistency>
        <readable></readable>
        <simpleType>
            <uint8_t>
                <default>0</default>
            </uint8_t>
        </simpleType>
    </attribute>

</attributes>
